{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Yuemin\\\\Documents\\\\GitHub\\\\portfolio\\\\Client\\\\src\\\\Webpages\\\\DatabaseUsage.js\",\n  _s = $RefreshSig$();\nimport \"../styles/Database.css\";\nimport React from 'react';\nimport Axios from 'axios';\nimport { flexRender, getCoreRowModel, useReactTable } from '@tanstack/react-table';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Databases() {\n  _s();\n  //runs only on first load. Only used to automatically fetch the database data and store it\n  React.useEffect(() => {\n    try {\n      Axios.get(\"/test\").then(response => {\n        setarrayData(response.data.rows);\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  }, []);\n  //useState to store the data obtained from the database\n  const [arrayData, setarrayData] = React.useState([]);\n  console.log(arrayData);\n  const columns = [{\n    id: 'FirstName',\n    accessorFn: row => `${row[1]}`,\n    header: \"First Name\"\n  }, {\n    accessorKey: \"2\",\n    header: \"Last Name\"\n  }, {\n    accessorKey: \"3\",\n    header: \"Email Address\"\n  }, {\n    accessorKey: \"4\",\n    header: \"Address\"\n  }, {\n    accessorKey: \"5\",\n    header: \"Phone Number\"\n  }, {\n    accessorKey: \"6\",\n    header: \"Access Level\"\n  }, {\n    accessorKey: \"7\",\n    header: \"Password\"\n  }];\n  const table = useReactTable({\n    columns,\n    arrayData,\n    getCoreRowModel: getCoreRowModel()\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Databases\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-container\",\n      children: table.getHeaderGroups().map(headerGroup => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tr\",\n        children: headerGroup.headers.map(header => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"th\",\n          children: header.column.columnDef.header\n        }, header.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 35\n        }, this))\n      }, headerGroup.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 61\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n}\n_s(Databases, \"dQtNJnpgnJsCBIqdmqKxPzl2amM=\", false, function () {\n  return [useReactTable];\n});\n_c = Databases;\nexport default Databases;\nvar _c;\n$RefreshReg$(_c, \"Databases\");","map":{"version":3,"names":["React","Axios","flexRender","getCoreRowModel","useReactTable","jsxDEV","_jsxDEV","Databases","_s","useEffect","get","then","response","setarrayData","data","rows","err","console","log","arrayData","useState","columns","id","accessorFn","row","header","accessorKey","table","children","fileName","_jsxFileName","lineNumber","columnNumber","className","getHeaderGroups","map","headerGroup","headers","column","columnDef","_c","$RefreshReg$"],"sources":["C:/Users/Yuemin/Documents/GitHub/portfolio/Client/src/Webpages/DatabaseUsage.js"],"sourcesContent":["import \"../styles/Database.css\";\r\nimport React from 'react';\r\nimport Axios from 'axios';\r\nimport {flexRender, getCoreRowModel, useReactTable} from '@tanstack/react-table';\r\n\r\nfunction Databases(){\r\n\r\n     //runs only on first load. Only used to automatically fetch the database data and store it\r\n     React.useEffect(() => {\r\n        try {\r\n            Axios.get(\"/test\").then((response) => {\r\n                setarrayData(response.data.rows);\r\n            })\r\n        } catch (err){\r\n            console.log(err);\r\n        }\r\n    }, [])\r\n    //useState to store the data obtained from the database\r\n    const [arrayData, setarrayData] = React.useState([]);\r\n    console.log(arrayData);\r\n    const columns = [\r\n        {\r\n            id: 'FirstName',\r\n            accessorFn: row => `${row[1]}`,\r\n            header: \"First Name\",\r\n        },\r\n        {\r\n            accessorKey: \"2\",\r\n            header: \"Last Name\",\r\n        },\r\n        {\r\n            accessorKey: \"3\",\r\n            header: \"Email Address\",\r\n        },\r\n        {\r\n            accessorKey: \"4\",\r\n            header: \"Address\",\r\n        },\r\n        {\r\n            accessorKey: \"5\",\r\n            header: \"Phone Number\",\r\n        },\r\n        {\r\n            accessorKey: \"6\",\r\n            header: \"Access Level\",\r\n        },\r\n        {\r\n            accessorKey: \"7\",\r\n            header: \"Password\",\r\n        },\r\n    ]\r\n    const table = useReactTable({\r\n        columns,\r\n        arrayData,\r\n        getCoreRowModel:getCoreRowModel()\r\n    })\r\n\r\n    return(\r\n        <div>\r\n            <h1>Databases</h1>\r\n            <div className='table-container'>\r\n                {table.getHeaderGroups().map(headerGroup => <div className = \"tr\" key={headerGroup.id}>\r\n                    {headerGroup.headers.map(\r\n                        header => <div className=\"th\" key={header.id}>\r\n                            {header.column.columnDef.header}\r\n                        </div>\r\n                    )}\r\n                </div>)}\r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Databases;"],"mappings":";;AAAA,OAAO,wBAAwB;AAC/B,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,OAAO;AACzB,SAAQC,UAAU,EAAEC,eAAe,EAAEC,aAAa,QAAO,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjF,SAASC,SAASA,CAAA,EAAE;EAAAC,EAAA;EAEf;EACAR,KAAK,CAACS,SAAS,CAAC,MAAM;IACnB,IAAI;MACAR,KAAK,CAACS,GAAG,CAAC,OAAO,CAAC,CAACC,IAAI,CAAEC,QAAQ,IAAK;QAClCC,YAAY,CAACD,QAAQ,CAACE,IAAI,CAACC,IAAI,CAAC;MACpC,CAAC,CAAC;IACN,CAAC,CAAC,OAAOC,GAAG,EAAC;MACTC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;IACpB;EACJ,CAAC,EAAE,EAAE,CAAC;EACN;EACA,MAAM,CAACG,SAAS,EAAEN,YAAY,CAAC,GAAGb,KAAK,CAACoB,QAAQ,CAAC,EAAE,CAAC;EACpDH,OAAO,CAACC,GAAG,CAACC,SAAS,CAAC;EACtB,MAAME,OAAO,GAAG,CACZ;IACIC,EAAE,EAAE,WAAW;IACfC,UAAU,EAAEC,GAAG,IAAK,GAAEA,GAAG,CAAC,CAAC,CAAE,EAAC;IAC9BC,MAAM,EAAE;EACZ,CAAC,EACD;IACIC,WAAW,EAAE,GAAG;IAChBD,MAAM,EAAE;EACZ,CAAC,EACD;IACIC,WAAW,EAAE,GAAG;IAChBD,MAAM,EAAE;EACZ,CAAC,EACD;IACIC,WAAW,EAAE,GAAG;IAChBD,MAAM,EAAE;EACZ,CAAC,EACD;IACIC,WAAW,EAAE,GAAG;IAChBD,MAAM,EAAE;EACZ,CAAC,EACD;IACIC,WAAW,EAAE,GAAG;IAChBD,MAAM,EAAE;EACZ,CAAC,EACD;IACIC,WAAW,EAAE,GAAG;IAChBD,MAAM,EAAE;EACZ,CAAC,CACJ;EACD,MAAME,KAAK,GAAGvB,aAAa,CAAC;IACxBiB,OAAO;IACPF,SAAS;IACThB,eAAe,EAACA,eAAe,CAAC;EACpC,CAAC,CAAC;EAEF,oBACIG,OAAA;IAAAsB,QAAA,gBACItB,OAAA;MAAAsB,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClB1B,OAAA;MAAK2B,SAAS,EAAC,iBAAiB;MAAAL,QAAA,EAC3BD,KAAK,CAACO,eAAe,CAAC,CAAC,CAACC,GAAG,CAACC,WAAW,iBAAI9B,OAAA;QAAK2B,SAAS,EAAG,IAAI;QAAAL,QAAA,EAC5DQ,WAAW,CAACC,OAAO,CAACF,GAAG,CACpBV,MAAM,iBAAInB,OAAA;UAAK2B,SAAS,EAAC,IAAI;UAAAL,QAAA,EACxBH,MAAM,CAACa,MAAM,CAACC,SAAS,CAACd;QAAM,GADAA,MAAM,CAACH,EAAE;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEvC,CACT;MAAC,GALkEI,WAAW,CAACd,EAAE;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMhF,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAACxB,EAAA,CAnEQD,SAAS;EAAA,QA8CAH,aAAa;AAAA;AAAAoC,EAAA,GA9CtBjC,SAAS;AAqElB,eAAeA,SAAS;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}