{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Yuemin\\\\Documents\\\\GitHub\\\\portfolio\\\\Client\\\\src\\\\Webpages\\\\DatabaseUsage.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport Axios from 'axios';\nimport { getCoreRowModel, useReactTable } from '@tanstack/react-table';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Databases() {\n  _s();\n  //useState to store the data obtained from the database\n  const [arrayData, setarrayData] = React.useState([]);\n  const columns = [{\n    accessorKey: 'firstName',\n    header: \"First Name\",\n    cell: props => /*#__PURE__*/_jsxDEV(\"p\", {\n      children: props.getValue()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 30\n    }, this)\n  }, {\n    accessorKey: 'lastName',\n    header: \"Last Name\",\n    cell: props => /*#__PURE__*/_jsxDEV(\"p\", {\n      children: props.getValue()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 30\n    }, this)\n  }, {\n    accessorKey: 'Email',\n    header: \"Email Address\",\n    cell: props => /*#__PURE__*/_jsxDEV(\"p\", {\n      children: props.getValue()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 30\n    }, this)\n  }, {\n    accessorKey: 'Address',\n    header: \"Address\",\n    cell: props => /*#__PURE__*/_jsxDEV(\"p\", {\n      children: props.getValue()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 30\n    }, this)\n  }, {\n    accessorKey: 'Phone Number',\n    header: \"Phone Number\",\n    cell: props => /*#__PURE__*/_jsxDEV(\"p\", {\n      children: props.getValue()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 30\n    }, this)\n  }, {\n    accessorKey: 'Access Level',\n    header: \"Access Level\",\n    cell: props => /*#__PURE__*/_jsxDEV(\"p\", {\n      children: props.getValue()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 30\n    }, this)\n  }, {\n    accessorKey: 'Password',\n    header: \"Password\",\n    cell: props => /*#__PURE__*/_jsxDEV(\"p\", {\n      children: props.getValue()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 30\n    }, this)\n  }];\n  const table = useReactTable({\n    arrayData,\n    columns,\n    getCoreRowModel: getCoreRowModel()\n  });\n\n  //runs only on first load. Only used to automatically fetch the database data and store it\n  React.useEffect(() => {\n    try {\n      Axios.get(\"/test\").then(response => {\n        setarrayData(response.data.rows);\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Databases\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-container\",\n      children: table.getHeaderGroups().map(headerGroup => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tr\",\n        children: headerGroup.headers.map(header => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"th\",\n          children: header.column.columnDef.header\n        }, header.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 35\n        }, this))\n      }, headerGroup.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 61\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n}\n_s(Databases, \"gZjoFs64UTTH/T9od7gAYFcYxSg=\", false, function () {\n  return [useReactTable];\n});\n_c = Databases;\nexport default Databases;\nvar _c;\n$RefreshReg$(_c, \"Databases\");","map":{"version":3,"names":["React","Axios","getCoreRowModel","useReactTable","jsxDEV","_jsxDEV","Databases","_s","arrayData","setarrayData","useState","columns","accessorKey","header","cell","props","children","getValue","fileName","_jsxFileName","lineNumber","columnNumber","table","useEffect","get","then","response","data","rows","err","console","log","className","getHeaderGroups","map","headerGroup","headers","column","columnDef","id","_c","$RefreshReg$"],"sources":["C:/Users/Yuemin/Documents/GitHub/portfolio/Client/src/Webpages/DatabaseUsage.js"],"sourcesContent":["import React from 'react';\r\nimport Axios from 'axios';\r\nimport {getCoreRowModel, useReactTable} from '@tanstack/react-table';\r\n\r\nfunction Databases(){\r\n\r\n    //useState to store the data obtained from the database\r\n    const [arrayData, setarrayData] = React.useState([]);\r\n    const columns = [\r\n        {\r\n            accessorKey: 'firstName',\r\n            header: \"First Name\",\r\n            cell: (props) => <p>{props.getValue()}</p>\r\n        },\r\n        {\r\n            accessorKey: 'lastName',\r\n            header: \"Last Name\",\r\n            cell: (props) => <p>{props.getValue()}</p>\r\n        },\r\n        {\r\n            accessorKey: 'Email',\r\n            header: \"Email Address\",\r\n            cell: (props) => <p>{props.getValue()}</p>\r\n        },\r\n        {\r\n            accessorKey: 'Address',\r\n            header: \"Address\",\r\n            cell: (props) => <p>{props.getValue()}</p>\r\n        },\r\n        {\r\n            accessorKey: 'Phone Number',\r\n            header: \"Phone Number\",\r\n            cell: (props) => <p>{props.getValue()}</p>\r\n        },\r\n        {\r\n            accessorKey: 'Access Level',\r\n            header: \"Access Level\",\r\n            cell: (props) => <p>{props.getValue()}</p>\r\n        },\r\n        {\r\n            accessorKey: 'Password',\r\n            header: \"Password\",\r\n            cell: (props) => <p>{props.getValue()}</p>\r\n        },\r\n    ]\r\n    const table = useReactTable({\r\n        arrayData,\r\n        columns,\r\n        getCoreRowModel:getCoreRowModel()\r\n    })\r\n\r\n    //runs only on first load. Only used to automatically fetch the database data and store it\r\n    React.useEffect(() => {\r\n        try {\r\n            Axios.get(\"/test\").then((response) => {\r\n                setarrayData(response.data.rows)\r\n            })\r\n        } catch (err){\r\n            console.log(err);\r\n        }\r\n    }, [])\r\n\r\n    return(\r\n        <div>\r\n            <h1>Databases</h1>\r\n            <div className='table-container'>\r\n                {table.getHeaderGroups().map(headerGroup => <div className = \"tr\" key={headerGroup.id}>\r\n                    {headerGroup.headers.map(\r\n                        header => <div className=\"th\" key={header.id}>\r\n                            {header.column.columnDef.header}\r\n                        </div>\r\n                    )}\r\n                </div>)}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Databases;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}